# Haproxy.cfg for REDIS-PROXY
#
global
    log stdout format raw local0
    log stderr format raw daemon notice

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4096

    stats socket /var/lib/haproxy/stats
    stats maxconn 1
    stats timeout 120s


# == Redis proxy
#
resolvers awsvpc
    nameserver vpc %{DNS_RESOLVER}:53

# Specifies TCP timeout on connect for use by the frontend ft_redis
# Set the max time to wait for a connection attempt to a server to succeed 
# The server and client side expected to acknowledge or send data.
defaults REDIS
    log  global
    mode tcp
    timeout connect 3s
    timeout server 30s
    timeout client 30s

# Specifies listening socket for accepting client connections using the default 
# REDIS TCP timeout and backend bk_redis TCP health check.
frontend ft_redis
    option tcpka
    maxconn 30
    bind *:%{PROXY_PORT} name redis
    default_backend bk_redis

# Specifies the backend Redis proxy server TCP health settings 
# Ensure it only forward incoming connections to reach a master.
backend bk_redis
    option tcpka
    option tcp-check
    tcp-check connect
    # tcp-check send PING\r\n
    # tcp-check expect string +PONG
    # tcp-check send info\ replication\r\n
    # tcp-check expect string role:master
    # tcp-check send QUIT\r\n
    # tcp-check expect string +OK
    server master-elasticache %{REDIS_HOST}:%{REDIS_PORT} check resolvers awsvpc inter 2s


# == Haproxy Stats URL
#
listen  stats 
    bind  0.0.0.0:1936
    mode  http
    log   global

    maxconn 10

    timeout connect 10s
    timeout client  10s
    timeout server  10s
    timeout queue   100s

    stats enable
    #stats hide-version
    stats refresh 5s
    stats show-node
    stats auth %{ADMIN_USER}:%{ADMIN_PASSWORD}
    stats uri  /haproxy?stats